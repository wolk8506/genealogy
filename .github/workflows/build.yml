name: Build & Release Electron App

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g. 1.0.25)"
        required: true

permissions:
  contents: write

jobs:
  # ──────────────────────────────────────────────────
  build-mac:
    name: Build macOS .dmg
    runs-on: macos-latest
    outputs:
      dmg-path: ${{ steps.find-dmg.outputs.path }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install deps
        run: npm ci --legacy-peer-deps

      - name: Build React
        run: npm run build:react

      - name: Build DMG
        run: npm run dist:mac

      - name: Find built .dmg
        id: find-dmg
        run: |
          FILE=$(ls dist_electron/*.dmg)
          echo "path=$FILE" >> $GITHUB_OUTPUT

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: dist_electron/**

  # ──────────────────────────────────────────────────
  build-win:
    name: Build Windows installer
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install deps
        run: npm ci --legacy-peer-deps

      - name: Build React
        run: npm run build:react

      - name: Build Windows installer
        run: npm run dist:win

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            dist_electron/*.exe
            dist_electron/*.blockmap
            dist_electron/latest.yml

  # ──────────────────────────────────────────────────
  build-linux:
    name: Build Linux AppImage
    runs-on: ubuntu-latest
    outputs:
      appimg-path: ${{ steps.find-appimg.outputs.path }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install deps
        run: npm ci --legacy-peer-deps

      - name: Build React
        run: npm run build:react

      - name: Build AppImage
        run: npm run dist:linux

      - name: Find AppImage
        id: find-appimg
        run: |
          FILE=$(ls dist_electron/*.AppImage)
          echo "path=$FILE" >> $GITHUB_OUTPUT

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: dist_electron/**

  # ──────────────────────────────────────────────────
  release:
    name: Create GitHub Release and upload assets
    runs-on: ubuntu-latest
    needs: [build-mac, build-win, build-linux]
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3

      - name: Get version
        id: get-version
        shell: bash
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Download macOS build
        uses: actions/download-artifact@v4
        with:
          name: macos-build
          path: artifacts/macos

      - name: Download Windows build
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: artifacts/windows

      - name: Download Linux build
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: artifacts/linux

      - name: Create GitHub Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ env.VERSION }}"
          release_name: "${{ env.VERSION }}"
          draft: false
          prerelease: false

      - name: Upload Windows full installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: artifacts/windows/Genealogy-Setup-${{ env.VERSION }}.exe
          asset_name: "Genealogy-Setup-${{ env.VERSION }}.exe"
          asset_content_type: application/octet-stream

      - name: Upload Windows blockmap
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: artifacts/windows/Genealogy-Setup-${{ env.VERSION }}.exe.blockmap
          asset_name: "Genealogy-Setup-${{ env.VERSION }}.exe.blockmap"
          asset_content_type: application/octet-stream

      - name: Upload Windows latest.yml
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: artifacts/windows/latest.yml
          asset_name: latest.yml
          asset_content_type: application/x-yaml

      - name: Upload Linux AppImage
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: artifacts/linux/Genealogy-${{ env.VERSION }}.AppImage
          asset_name: "Genealogy-${{ env.VERSION }}.AppImage"
          asset_content_type: application/octet-stream
